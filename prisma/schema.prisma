
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                        String   @default(auto()) @id @map("_id") @db.ObjectId
  name                      String
  email                     String?    @unique
  role                      Role?      @default(USER)
  verificationCode          String?
  verificationCodeExpires   DateTime?
  password                  String
  isEmailVerified           Boolean?   @default(false)
  avatar                    String?    @default("")
  bio                       String?    @default("")
  isActive                  Boolean?   @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Blog {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  titleFa    String
  content    String
  contentFa  String     @db.ObjectId
  categories String[]   @db.ObjectId   @default([])
  tags       String[]   @db.ObjectId   @default([])
  image      String
  views      Int?        @default(0)
  likes      Int?        @default(0)
  shortDesc  String?     @default("")
  author     String     @db.ObjectId
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model category {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  nameFa         String
  slug           String
  description    String?   @default("")
  descriptionFa  String?   @default("")
  imageURI       String     @default("")
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Tag {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  nameFa          String
  slug            String
  description     String?   @default("")
  descriptionFa   String?   @default("")
  imageURI        String     @default("")
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Comment {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  blogId     String     @db.ObjectId
  authorId   String     @db.ObjectId 
  text       String
  title      String
  isAllowed  Boolean    @default(false)
  isEnglish  Boolean    @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model ContactUs {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String
  message    String
  isShow     Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}