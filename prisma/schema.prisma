
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model Blog {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  titleFa    String
  content    String
  contentFa  String     @db.ObjectId
  categories String[]   @db.ObjectId   @default([])
  tags       String[]   @db.ObjectId   @default([])
  image      String
  views      Int?        @default(0)
  likes      Int?        @default(0)
  shortDesc  String?     @default("")
  author     String     @db.ObjectId
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model category {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  nameFa         String
  slug           String
  description    String?   @default("")
  descriptionFa  String?   @default("")
  imageURI       String     @default("")
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Tag {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  nameFa          String
  slug            String
  description     String?   @default("")
  descriptionFa   String?   @default("")
  imageURI        String     @default("")
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Comment {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  blogId     String     @db.ObjectId
  authorId   String     @db.ObjectId 
  text       String
  title      String
  isAllowed  Boolean    @default(false)
  isEnglish  Boolean    @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model ContactUs {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String
  message    String
  isShow     Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}